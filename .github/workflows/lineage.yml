name: 修复版 LineageOS 内核构建工作流
on: 
  workflow_dispatch:

jobs:
  build_kernel:
    runs-on: ubuntu-latest
    steps:
      - name: 检查代码仓库
        run: |
          git clone https://github.com/LineageOS/android_kernel_oneplus_sm8150.git -b lineage-22.2 --depth=1
          git clone https://github.com/LineageOS/android_vendor_lineage.git vendor/lineage --depth=1
          # 创建内核输出目录（解决权限问题）
          mkdir -p android_kernel_oneplus_sm8150/kernel_out
          chmod 777 android_kernel_oneplus_sm8150/kernel_out

      - name: 安装工具链与依赖
        run: |
          git clone https://gitlab.com/crdroidandroid/android_prebuilts_clang_host_linux-x86_clang-r536225 clang --depth=1
          sudo apt-get update
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
            binutils-aarch64-linux-gnu bc bison flex \
            libncurses5-dev libssl-dev python3-pip \
            device-tree-compiler libelf-dev make rsync

      - name: 创建正确的 build_kernel.mk
        run: |
          cat > android_kernel_oneplus_sm8150/build_kernel.mk << 'EOF'
          # 核心变量定义（确保路径正确）
          BOARD_KERNEL_IMAGE_NAME := Image.gz-dtb
          TARGET_KERNEL_CONFIG := vendor/sm8150-perf_defconfig
          TARGET_KERNEL_CLANG_COMPILE := true
          KERNEL_ARCH := arm64
          KERNEL_CLANG_TRIPLE := aarch64-linux-gnu-
          TARGET_KERNEL_CLANG_PATH := $(CURDIR)/../clang
          CROSS_COMPILE := aarch64-linux-gnu-
          # 使用相对路径（避免绝对路径权限问题）
          KERNEL_OUT := $(CURDIR)/kernel_out
          KERNEL_SRC := $(CURDIR)
          TARGET_PREBUILT_KERNEL := $(KERNEL_OUT)/arch/$(KERNEL_ARCH)/boot/$(BOARD_KERNEL_IMAGE_NAME)
          # 关键：禁用预编译内核检测
          TARGET_NO_KERNEL := false
          # 强制内核源码路径（解决误判问题）
          KERNEL_DIR := $(KERNEL_SRC)

          include ../vendor/lineage/build/tasks/kernel.mk

          # 生成配置目标（Tab 分隔符+相对路径）
          generate_config:
          	@echo "=== 清除旧构建目录 ==="
          	rm -rf $(KERNEL_OUT)
          	mkdir -p $(KERNEL_OUT)
          	@echo "=== 生成内核配置 ==="
          	$(call make-kernel-config,$(KERNEL_OUT),$(TARGET_KERNEL_CONFIG))
          	@echo "=== 配置文件路径: $(KERNEL_OUT)/.config ==="
              
          build_image: generate_config
          	@echo "=== 开始编译内核 ==="
          	$(call make-kernel-target,$(BOARD_KERNEL_IMAGE_NAME))
          EOF
          # 确保命令行前是 Tab 而非空格
          sed -i 's/^  /\t/' android_kernel_oneplus_sm8150/build_kernel.mk

      - name: 生成内核配置（带环境变量传递）
        run: |
          cd android_kernel_oneplus_sm8150
          # 显式定义环境变量并传递给 make
          export KERNEL_SRC=$(pwd)
          export TARGET_KERNEL_CONFIG="vendor/sm8150-perf_defconfig"
          # 打印变量确认
          echo "KERNEL_SRC: $KERNEL_SRC"
          echo "TARGET_KERNEL_CONFIG: $TARGET_KERNEL_CONFIG"
          # 执行配置生成（传递环境变量）
          make -f build_kernel.mk generate_config
          # 验证配置文件
          if [ ! -f "kernel_out/.config" ]; then
            echo "ERROR: 配置文件生成失败！"
            exit 1
          else
            echo "SUCCESS: 配置文件生成成功"
          fi

      - name: 编译内核
        run: |
          cd android_kernel_oneplus_sm8150
          export KERNEL_SRC=$(pwd)
          make -f build_kernel.mk build_image

      - name: 上传产物
        uses: actions/upload-artifact@v4
        with:
          name: lineage-kernel-sm8150
          path: android_kernel_oneplus_sm8150/kernel_out/arch/arm64/boot/Image.gz-dtb
