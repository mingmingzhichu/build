name: Build OnePlus-Sm8150-Kernel-LOS22.2
on:
  workflow_dispatch:
  push:
    branches:
      - oneplus/LOS_SM8150_15.0
  pull_request:
    branches:
      - oneplus/LOS_SM8150_15.0

jobs:
  build:
    runs-on: ubuntu-22.04
    # 移除contents: write权限（仅上传制品无需发布权限）
    permissions:
      actions: write

    env:
      ANDROID_VERSION: android15
      KERNEL_VERSION: 4.14.365
      CCACHE_COMPILERCHECK: '%compiler% -dumpmachine; %compiler% -dumpversion'
      CCACHE_NOHASHDIR: 'true'
      CCACHE_MAXSIZE: '2G'
      CCACHE_HARDLINK: 'true'

    steps:
      # 1. 配置ccache加速编译
      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2

      # 2. 缓存AArch64交叉编译工具链
      - id: cache-aarch64
        name: Cache AArch64 prebuilt toolchain
        uses: actions/cache@v3
        with:
          path: aarch64/
          key: ${{ runner.os }}-aarch64-prebuilt-${{ hashFiles('aarch64/version.txt') }}
          restore-keys: |
            ${{ runner.os }}-aarch64-prebuilt-

      # 3. 缓存Android 15适配的Clang工具链
      - id: cache-clang
        name: Cache Clang toolchain
        uses: actions/cache@v3
        with:
          path: clang/
          key: ${{ runner.os }}-clang-android15
          restore-keys: |
            ${{ runner.os }}-clang-

      # 4. 清理系统冗余文件，释放磁盘空间
      - name: Remove unnecessary files
        run: |
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      # 5. 安装编译必需依赖（仅原生编译所需）
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt install -y \
            gcc-aarch64-linux-gnu \
            gcc-arm-linux-gnueabi \
            clang-14 \
            binutils make python3 libssl-dev build-essential bc bison flex unzip ca-certificates xz-utils mkbootimg cpio device-tree-compiler git git-lfs

      # 6. 拉取AArch64工具链（缓存未命中时）
      - name: Clone AArch64 prebuilt toolchain
        if: steps.cache-aarch64.outputs.cache-hit != 'true'
        run: |
          rm -rf aarch64
          git clone https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9.git aarch64 --depth=1
          cd aarch64 && git rev-parse HEAD > version.txt

      # 7. 拉取Android 15适配的Proton Clang（缓存未命中时）
      - name: Clone Proton Clang (Android 15)
        if: steps.cache-clang.outputs.cache-hit != 'true'
        run: |
          rm -rf clang
          git clone https://github.com/grm34/proton-clang -b android15 clang --depth=1

      # 8. 拉取LineageOS 22.2 (Android 15) 原生内核源码
      - name: Checkout Android 15 kernel source
        run: |
          rm -rf kernel
          git clone https://github.com/Ninjona/android_kernel_oneplus_sm8150 \
            -b oneplus/LOS_SM8150_15.0 --depth=1 kernel

      # 9. 原生内核编译（使用源码自带defconfig，无额外配置）
      - name: Build kernel (Stock LOS22.2 Config)
        run: |
          export KERNEL_DEFCONFIG="lineage_sm8150_defconfig"
          export KERNEL_CMDLINE="ARCH=arm64 CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-androidkernel- CROSS_COMPILE_ARM32=arm-linux-gnueabi- LLVM=1 LLVM_IAS=1 O=out"
          export PATH=$(pwd)/clang/bin/:$(pwd)/aarch64/bin/:$PATH
          export ARCH=arm64
          export SUBARCH=arm64
          export LD=ld.lld
          cd kernel
          make $KERNEL_CMDLINE CC="ccache clang" $KERNEL_DEFCONFIG
          make $KERNEL_CMDLINE CC="ccache clang" -j$(nproc --all)

      # 10. 仅上传内核编译产物到GitHub Actions制品（无Releases）
      - name: Upload kernel artifacts to Actions
        uses: actions/upload-artifact@v4
        with:
          name: LOS22.2-Kernel-Artifacts
          path: |
            kernel/out/arch/arm64/boot/Image          # 核心内核镜像
            kernel/out/arch/arm64/boot/dts/qcom/*.dtb # 设备树文件
            kernel/out/arch/arm64/boot/dtbo.img       # 设备树叠加文件
          retention-days: 30  # 制品保留30天（可按需调整）
